<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.feather.xd.mapper.CouponMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="org.feather.xd.model.CouponDO">
        <id column="id" property="id" />
        <result column="category" property="category" />
        <result column="publish" property="publish" />
        <result column="coupon_img" property="couponImg" />
        <result column="coupon_title" property="couponTitle" />
        <result column="price" property="price" />
        <result column="user_limit" property="userLimit" />
        <result column="start_time" property="startTime" />
        <result column="end_time" property="endTime" />
        <result column="publish_count" property="publishCount" />
        <result column="stock" property="stock" />
        <result column="create_time" property="createTime" />
        <result column="condition_price" property="conditionPrice" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, category, publish, coupon_img, coupon_title, price, user_limit, start_time, end_time, publish_count, stock, create_time, condition_price
    </sql>
<!--    方案一： 如果扣减最多一个-->
<!--    方案一： id是主键索引的前提下，如果每次只是减少1个库存，则可以采用这种方式，只做数据安全校验，可以有效减库存，性能更高，避免大量无用sql，只要有库存就可以操作成功-->
<!--             update coupon set stock=stock-1 where id = #{couponId} and stock > 0-->

    <update id="reduceStock">
        update coupon set stock = stock - #{num} where id = #{couponId} and stock > = #{num}
    </update>

<!--    方案二-->
<!--    update product set stock=stock-1 where stock=#{原来查询的库存} and id=1 and stock>0-->
<!--    方案二:使用业务自身条件作为乐观锁，但是存在ABA问题，对比方案三的好处是不用增加version 字段，如果只是扣减库存且不在意ABA问题时，则可以采用上面的方式，但业务性能相对方案一就差了
一点，因为库存变动后sql 就会无效-->

    <!--方案三：版本号解决-->
    <!--    update coupon set stock=stock-1,version=version+1 where id = #{couponId} and stock > 0 and version = #{oldVersion}-->
    <!--方案三：增加版本号主要是为了解决ABA问题，数据读取后，更新前数据被别人篡改过，version只能做递增
    场景：商品秒杀，优惠券方法，需要记录库存操作前后的业务-->
</mapper>
